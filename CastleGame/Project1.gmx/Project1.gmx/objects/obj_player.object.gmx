<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lord_run</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_camInitialize(); //initializes camera
instance_create(obj_player.x, obj_player.y, obj_sword);

image_speed = 0.25;
friction = 0.35;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//player points towards mouse
if point_direction(x,y,mouse_x,mouse_y) &gt;= 90 &amp;&amp; point_direction(x,y,mouse_x,mouse_y) &lt;= 270
    image_xscale= 1
else
    image_xscale= -1

scr_camera();
 
//Move Right
if keyboard_check(ord("D"))//&amp;&amp; place_free(x+6,y)
{
    hspeed = 6;
    if (image_index &gt; 12)
    { 
        image_index = 0;
    }
    //if !place_meeting(x + 6, y, obj_castle) hspeed = 6;
}
//Move Left
if keyboard_check(ord("A"))//&amp;&amp; place_free(x-6,y)
{
    hspeed = -6; 
    if (image_index &gt; 12)
    {
        image_index = 0;
    }
    //if !place_meeting(x - 6, y, obj_castle) hspeed = -6;
}
//Move Up
if keyboard_check(ord("W"))//)&amp;&amp; place_free(x,y-6)
{
    vspeed = -6;
    if (image_index &gt; 12)
    {
        image_index = 0; 
    }
    //if !place_meeting(x, y - 6, obj_castle) vspeed = -6;
}
//Move Down
if keyboard_check(ord("S")) //&amp;&amp; place_free(x,y+6)
{
    vspeed = 6; 
    if (image_index &gt; 12) 
    {
        image_index = 0;
    }
    //if !place_meeting(x, y + 6, obj_castle) vspeed = 6;
}

if (keyboard_check(vk_nokey))
{
if (image_index &lt; 12)
{
    image_index = 12;
    if(image_index == 17)
    {
        image_index = 12;
    }
    
}
}
if (y + 72 &lt; obj_castle.y + 210)
{
    depth = 5;
}
else
    depth = 1;
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_fence_2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(distance_to_object(instance_nearest(x, y, obj_castle)) &lt; 100)
{
    if place_meeting(x, y + vspeed, obj_castle)
    {
        vspeed=0
        y = yprevious
    }
    
    if place_meeting(x + hspeed, y, obj_castle)
    {
        hspeed = 0
        x = xprevious
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_fence">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(distance_to_object(instance_nearest(x, y, obj_castle)) &lt; 100)
{
    if place_meeting(x, y + vspeed, obj_castle)
    {
        vspeed=0
        y = yprevious
    }
    
    if place_meeting(x + hspeed, y, obj_castle)
    {
        hspeed = 0
        x = xprevious
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_castle">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(distance_to_object(instance_nearest(x, y, obj_castle)) &lt; 100)
{
    if place_meeting(x, y + vspeed, obj_castle)
    {
        vspeed=0
        y = yprevious
    }
    
    if place_meeting(x + hspeed, y, obj_castle)
    {
        hspeed = 0
        x = xprevious
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(distance_to_object(instance_nearest(x, y, obj_castle)) &lt; 100)
{
    if place_meeting(x, y + vspeed, obj_castle)
    {
        vspeed=0
        y = yprevious
    }
    
    if place_meeting(x + hspeed, y, obj_castle)
    {
        hspeed = 0
        x = xprevious
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>23,26</point>
    <point>22,22</point>
  </PhysicsShapePoints>
</object>
